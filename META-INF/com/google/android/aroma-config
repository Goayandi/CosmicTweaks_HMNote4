ini_set("force_colorspace","rgba");

ziptotmp("anykernel.prop", "anykernel.prop");
ziptotmp("changelog.txt", "changelog.txt");

ini_set("rom_name",             file_getprop("/tmp/aroma/anykernel.prop","name"));
ini_set("rom_version",          file_getprop("/tmp/aroma/anykernel.prop","version"));
ini_set("rom_author",           "CosmicDan");
ini_set("rom_device",           file_getprop("/tmp/aroma/anykernel.prop","device1"));



theme("miui");

fontresload( "0", "ttf/Roboto-Regular.ttf", "12" );
fontresload( "1", "ttf/Roboto-Regular.ttf", "14" );

setvar("is_device_valid", resexec("is_device_valid.sh"));
if (getvar("is_device_valid")=="0") then
    ini_set("text_next", "Exit");
    ini_set("icon_next", "");
    textbox(
        "Error",
        "Wrong device",
        "@install",
        "You're attempting to install this ZIP on an unsupported device. Sorry!"
    );
    exit("");;
endif;

resexec("mount_system.sh");

if (file_getprop("/system/build.prop", "ro.miui.cust_variant") == "eu") then
    setvar("romtypestring", "Xiaomi.eu");
    setvar("iseurom", true);
else
    # TODO: Distinguish between global/china later maybe?
    setvar("romtypestring", "Official Global/China");
    setvar("iseurom", false);
endif;

setvar("romversion", file_getprop("/system/build.prop", "ro.build.version.incremental"));

# self-reminder in case I ever want a 'dynamic menu' type thing
# eval(read("/tmp/other_aroma_script.edify"));

gotolabel("start");
ini_set("text_next", "Next");
ini_set("icon_next", "@next");

############
## Main menu
############
menubox(
    "Welcome to " + ini_get("rom_name") + "!",
    "CosmicTweaks <b>" + ini_get("rom_version") + "</b> for " + ini_get("rom_device") + "\n" +
    "Detected ROM: <b>" + getvar("romtypestring") + "</b>\n" +
    "Detected version: <b>" + getvar("romversion") + "</b>",
    "@home",
    "choice_main.prop",
    "Install",                  "Begin customization of ROM with CosmicTweaks",         "@install",
    "Configure ADB",            "Change Boot-time ADB / Security level",                "@adb",
    "Changelog",                "View changelog for this version",                      "@changelog",
    "Exit",                     "Exit and return to Recovery",                          "@exit"
);



#########
## Install
#########
if prop("choice_main.prop","selected")=="1" then

    ini_set("text_next", "Install  ");
    ini_set("icon_next", "@install");
    textbox(
        "Install",
        "Ready to install",
        "@install",
        "I've got enough information, ready to apply CosmicTweaks!"
    );
endif;


#########
## Configure ADB
#########
if prop("choice_main.prop","selected")=="2" then
    form(
        "Configure ADB",
        "Change Boot-time ADB / Security level",
        "@adb",
        "choice_adb.prop",
        "install",      "Insecure ADB On Boot",     "Modify the kernel to enable an insecure ADB on boot",      "select.selected",
        "restore",      "Restore",                  "Restore original secure and non-boot ADB functionality",   "select"
    );
    
    #########
    ## Install
    #########
    if prop("choice_adb.prop","root")=="install" then
        #########
        ## Root-mode choice
        #########
        setvar("adb_rootmode_text", "<#999>Unavailable</#> <i>(Requires base tweaks to be installed first)</i>");
        setvar("adb_ready_footer_text", "<#900><b>Notice!</b></#> ADB on boot is a security risk - be sure to restore secure and non-boot ADB functionality once you no longer have a need for it.");
        
        if (file_getprop("/system/build.prop", "ro.cosmictweaks.sysinitcapable") == "true") then
            checkviewbox(
                "Root-mode ADBD",
                "Thanks to the CosmicTweaks SEPolicy patches and my own modified ADBD binary, we have the possibility to use a root-mode ADBD binary.\n\n\n" +
                  "Root-mode ADBD allows some more advanced capabilities like:\n" +
                  "<*>`adb shell` will immediately put the user into a root shell,</*>"+
                  "<*>`adb remount` as a shortcut to remount /system as rw,</*>"+
                  "<*>`adb push` can push files directly to /system (assuming it's already mounted rw)</*>"+"\n\n\n"+
                  "Note that root-mode ADBD is a developer/debug tool that is usually hard-disabled on user builds of Android - <i>I had to compile a hacked adbd binary to provide this functionality</i>. This is because <b>root-mode ADBD is a massive security risk.</b>\n\n"+
                  "Please only enable if you are an experienced user.",
                "@adb",
                "Enable root-mode ADBD?",
                "0",
                "rootmode_adb"
            );
            
            if getvar("rootmode_adb") == "1" then
                writetmpfile("choice_adb_rootmode.prop","enabled=1\n");
                setvar("adb_rootmode_text", "<#c00>Enabled</#>");
                setvar("adb_ready_footer_text", getvar("adb_ready_footer_text") + "\n\n<#c00><b>WARNING!</b></#> Root-mode ADBD is an advanced/developer function and a MAJOR security risk. I hope you know what you're doing!");
            else
                writetmpfile("choice_adb_rootmode.prop","enabled=0\n");
                setvar("adb_rootmode_text", "<#0c0>Disabled</#>");
            endif;
        #else
        #    setvar("adb_ready_footer_text", "<i>Root-mode ADBD is unavailable as it requires the CosmicTweaks base to be installed first.</i>\n\n" + getvar("adb_ready_footer_text"));
        endif;
        
        #########
        ## Confirm/disclaimer
        #########
        ini_set("text_next", "Install  ");
        ini_set("icon_next", "@install");
        textbox(
            "Install",
            "Ready to install Insecure ADB On Boot",
            "@install",
            "I've got enough information, ready to apply Insecure ADB On Boot!" + 
              "\n\n\n" +
              "<b>User selections:</b>\n" + 
              "    <*> Root-mode ADBD = " + getvar("adb_rootmode_text") + "</*>" +
              "\n\n\n" + 
              getvar("adb_ready_footer_text")
        );
    endif;
    
    #########
    ## Remove
    #########
    if prop("choice_adb.prop","root")=="restore" then
        #########
        ## Confirm
        #########
        ini_set("text_next", "Restore  ");
        ini_set("icon_next", "@undo");
        textbox(
            "Restore",
            "Ready to restore ADB functionality",
            "@restore",
            "I've got enough information, ready to restore secure and non-boot ADB functionality!"
        );
    endif
endif;

#########
## Changelog
#########
if prop("choice_main.prop","selected")=="3" then
    ini_set("text_next", "Return  ");
    ini_set("icon_next", "@home");
    textbox(
        "Changelog",
        "Changelog up to current version (" + ini_get("rom_version") + ")",
        "@changelog",
        read("/tmp/aroma/changelog.txt")
    );
    goto("start");
endif;

#########
## Exit
#########
if prop("choice_main.prop","selected")=="4" then
    exit("");
endif;

ini_set("text_next", "Return  ");
ini_set("icon_next", "@home");
setvar("retstatus",
    install(
        "Installing",
        "<b>"+ini_get("rom_name")+"</b> is performing the requested task(s).\n\n"+
        "This may take a minute.",
        "@install",
        "Done!\nBe sure to select 'Save Logs' in case you need to report a bug (this will overwrite any previous log made by this update ZIP)."
    )
);
goto("start");

ini_set("force_colorspace","rgba");

ziptotmp("anykernel.prop", "anykernel.prop");
ziptotmp("changelog.txt", "changelog.txt");
ziptotmp("disclaimer.txt", "disclaimer.txt");
ziptotmp("credits.txt", "credits.txt");

ini_set("rom_name",             file_getprop("/tmp/aroma/anykernel.prop","name"));
ini_set("rom_version",          file_getprop("/tmp/aroma/anykernel.prop","version"));
ini_set("rom_author",           "CosmicDan");
ini_set("rom_device",           file_getprop("/tmp/aroma/anykernel.prop","device1"));



theme("miui");

fontresload( "0", "ttf/Roboto-Regular.ttf", "12" );
fontresload( "1", "ttf/Roboto-Regular.ttf", "14" );

setvar("is_device_valid", resexec("is_device_valid.sh"));
if (getvar("is_device_valid")=="0") then
    ini_set("text_next", "Exit");
    ini_set("icon_next", "");
    textbox(
        "Error",
        "Wrong device",
        "@install",
        "You're attempting to install this ZIP on an unsupported device. Sorry!"
    );
    exit("");;
endif;

agreebox(
    "Disclaimer",
    "Please read and acknowledge the following information",
    "@warning",
    read("/tmp/aroma/disclaimer.txt"),
    "I understand and have made a backup",
    "You must acknowledge the disclaimer to use CosmicTweaks!"
);


resexec("mount_system.sh");

if (file_getprop("/system/build.prop", "ro.miui.cust_variant") == "eu") then
    setvar("romtypestring", "Xiaomi.eu");
    setvar("iseurom", true);
else
    setvar("romtypestring", "Official Global/China");
    setvar("iseurom", false);
endif;

setvar("romversion", file_getprop("/system/build.prop", "ro.build.version.incremental"));

gotolabel("start");
ini_set("text_next", "Next");
ini_set("icon_next", "@next");

############
## Main menu
############
menubox(
    "Welcome to " + ini_get("rom_name") + "!",
    "CosmicTweaks <b>" + ini_get("rom_version") + "</b> for " + ini_get("rom_device") + "\n" +
    "Detected ROM: <b>" + getvar("romtypestring") + "</b>\n" +
    "Detected version: <b>" + getvar("romversion") + "</b>",
    "@home",
    "choice_main.prop",
    "Install",                  "Begin customization of ROM with CosmicTweaks",         "@install",
    "Configure ADB",            "Change Boot-time ADB / Security level",                "@adb",
    "Integrate ART Cache",      "Move system OAT files from /data to /system",          "@chip",
    #"Icon Modder",              "All your icon modding needs!",                         "@brush",
    "Changelog",                "View changelog for this version",                      "@changelog",
    "Exit",                     "Exit and return to Recovery",                          "@exit"
);



#########
## Install
#########
if prop("choice_main.prop","selected")=="1" then

    if (getvar("iseurom")==true) then
        setvar("selected_if-eu",        "select.selected");
        setvar("selected_if-official",  "select");
        setvar("checked_if-eu",         "check.checked");
        setvar("checked_if-official",   "check");
    else
        setvar("selected_if-eu",        "select");
        setvar("selected_if-official",  "select.selected");
        setvar("checked_if-eu",         "check");
        setvar("checked_if-official",   "check.checked");
    endif;

    # removals
    form(
        "Removals",
        "Select which features you wish to remove. Some recommended defaults are already set depending on if you are on an Official or EU ROM. <#c00>If you uncheck any of these, existing removals will NOT be restored.</#>",
        "@install",
        "install_removals.prop",
        "systemremovals",   "System Removals",  "",                                                                                                             "group",
        "disableperfsvc",   "Disable PerfService",      "Disable MTK PerfService (userlevel-dictated CPU throttling service) which helps save battery.",        "check.checked",
        "data-app",         "/system/data-app/ files",  "",                                                                                                     "group",
        "data-app_delete",  "Erase /system/data-app/",  "Erase files at /system/data-app/. Usually only exists on official ROM's (preinstalled China apps).",   "select.selected",
        "data-app_keep",    "Keep /system/data-app/",   "Keep files at /system/data-app/. For unsupported / unknown ROM's - EU has no data-app at all.",        "select",
        "systembloat",      "/system bloat/china apps", "",                                                                                                     "group",
        "amapnetlocation",  "AMAPNetworkLocation",      "Non-Google location provider. <#c00>Must be removed on China ROM for Google Location to work.</#>",    getvar("checked_if-official"),
        "analyticscore",    "AnalyticsCore",            "Xiaomi stats collection. Has a LOT of suspicious dataminer-like permissions. Already removed on EU.",  getvar("checked_if-official"),
        "autotest",         "AutoTest",                 "MTK engineering and diagnostics app. Should be safe to remove.",                                       "check.checked",
        "sogouinput",       "SogouInput",               "Chinese IME (Keyboard). Check to let Google Keyboard be the default on China ROM.",                    getvar("checked_if-official"),
        "whetstone",        "Whetstone",                "MIUI's memory manager. Buggy on some older versions. See CosmicTweaks thread for details.",            "check",
        "yellowpage",       "YellowPage",               "Yellow Pages app. Only useful for China. EU ROM seems to have a custom/translated version.",           getvar("checked_if-official"),
        "otherbloatapps",   "Others",                   "Remove all other China-only and useless bloatware. Safe to leave checked even if you're on EU.",       "check.checked"
    );
    
    # tweaks
    form(
        "Tweaks",
        "Select desired tweaks. <#c00>If you uncheck any of these, the tweak will be *removed* from the system.</#> Be sure to read all, and scroll down for more.",
        "@install",
        "install_tweaks.prop",
        "buildprop",        "build.prop tweaks",        "",                                                                                                     "group",
        "camera",           "Camera quality",           "Various improvements to camera image/video quality and capability",                                    "check.checked",
        "fastdormancy",     "Fast Dormancy",            "Improves battery life if carrier supports it. <#c00>Relevance unconfirmed for MTK devices.</#>",       "check.checked",
        "forcedisable4g",   "Force 4G Disabled",        "Force disables all 4G capability. <#00c>Fixes deep-sleep issue for old 3G-only SIM cards.</#>",        "check",
        "googlelocation",   "Google Location Service",  "Set Google Location Service as the default.",                                                          "check.checked",
        "miuioptimization", "Disable MIUI Optimization","Provides better compatibility, but might remove some MIUI style from 3rd-party apps.",                 "check.checked",
        "scrollingtweaks",  "Scrolling Tweaks",         "Smaller scrolling cache (saves memory) and fling velocity tweak",                                      "check.checked",
        "initd",            "init.d tweaks",            "",                                                                                                     "group",
        "asusm930",         "asusm930's Tweaks",        "Script from 'UPDATE 3.0 (C)' of asusm930's thread. <#c00>Disabling perfservice recommended.</#>",      "check.checked",
        "internalnoop",     "Set Internal to NOOP I/O", "Use the NOOP scheduler for internal storage. Disable for default CFQ.",                                "check.checked",
        "vmlmkvalues",      "VM and LMK values",        "Personal values for much better multitasking with minimal impact to foreground performance.",          "check.checked",
        "cleariconcache",   "Clear Icon Cache",         "Clear Icon Cache on every boot. Useful for Unicon users or others who experience custom icon bugs.",   "check"
    );
    
    # additions
    form(
        "Additions and Replacements",
        "Select desired additions. <#c00>If you uncheck any of these, the additions/replacements will NOT be removed/reverted.</#>",
        "@install",
        "install_additions.prop",
        "priv-apps",        "System apps",              "",                                                                                                     "group",
        "googleapps",       "Google Apps",              "Minimal Google apps package useful for official ROM's. <#c00>Factory Reset may be required to avoid constant FC's.</#>",
                                                                                                                                                                getvar("checked_if-official"),
        "aospprovision",    "AOSP Provision",           "Replacement for MIUI Setup Wizard, skipping it completely. <#c00>Will not bypass activation.</#>",     getvar("checked_if-official"),
        "vendoroverlay",    "Vendor Overlays",          "",                                                                                                     "group",
        "framework",        "framework-res",            "Some basic tweaks that everyone probably wants. See feature list in thread for details.",              "check.checked",
        "quicksearchbox",   "Quick Search Box",         "English and Global-ify the MIUI search. Not necessary for Xiaomi.eu.",                                 getvar("checked_if-official")
    );
    

    ini_set("text_next", "Install  ");
    ini_set("icon_next", "@install");
    textbox(
        "Install",
        "Ready to install",
        "@install",
        "I've got enough information, ready to apply CosmicTweaks!"
    );
endif;


#########
## Configure ADB
#########
if prop("choice_main.prop","selected")=="2" then
    form(
        "Configure ADB",
        "Change Boot-time ADB / Security level",
        "@adb",
        "choice_adb.prop",
        "install",      "Insecure ADB On Boot",     "Modify the kernel to enable an insecure ADB on boot",      "select.selected",
        "restore",      "Restore",                  "Restore original secure and non-boot ADB functionality",   "select"
    );
    
    #########
    ## Install
    #########
    if prop("choice_adb.prop","root")=="install" then
        #########
        ## Root-mode choice
        #########
        setvar("adb_rootmode_text", "<#999>Unavailable</#> <i>(Requires base tweaks to be installed first)</i>");
        setvar("adb_ready_footer_text", "<#900><b>Notice!</b></#> ADB on boot is a security risk - be sure to restore secure and non-boot ADB functionality once you no longer have a need for it.");
        
        if (file_getprop("/system/build.prop", "ro.cosmictweaks.sysinitcapable") == "true") then
            checkviewbox(
                "Root-mode ADBD",
                "Thanks to the CosmicTweaks SEPolicy patches and my own modified ADBD binary, we have the possibility to use a root-mode ADBD binary.\n\n\n" +
                  "Root-mode ADBD allows some more advanced capabilities like:\n" +
                  "<*>`adb shell` will immediately put the user into a root shell,</*>"+
                  "<*>`adb remount` as a shortcut to remount /system as rw,</*>"+
                  "<*>`adb push` can push files directly to /system (assuming it's already mounted rw)</*>"+"\n\n\n"+
                  "Note that root-mode ADBD is a developer/debug tool that is usually hard-disabled on user builds of Android - <i>I had to compile a hacked adbd binary to provide this functionality</i>. This is because <b>root-mode ADBD is a massive security risk.</b>\n\n"+
                  "Please only enable if you are an experienced user.",
                "@adb",
                "Enable root-mode ADBD?",
                "0",
                "rootmode_adb"
            );
            
            if getvar("rootmode_adb") == "1" then
                writetmpfile("choice_adb_rootmode.prop","enabled=1\n");
                setvar("adb_rootmode_text", "<#c00>Enabled</#>");
                setvar("adb_ready_footer_text", getvar("adb_ready_footer_text") + "\n\n<#c00><b>WARNING!</b></#> Root-mode ADBD is an advanced/developer function and a MAJOR security risk. I hope you know what you're doing!");
            else
                writetmpfile("choice_adb_rootmode.prop","enabled=0\n");
                setvar("adb_rootmode_text", "<#0c0>Disabled</#>");
            endif;
        #else
        #    setvar("adb_ready_footer_text", "<i>Root-mode ADBD is unavailable as it requires the CosmicTweaks base to be installed first.</i>\n\n" + getvar("adb_ready_footer_text"));
        endif;
        
        #########
        ## Confirm/disclaimer
        #########
        ini_set("text_next", "Install  ");
        ini_set("icon_next", "@install");
        textbox(
            "Install",
            "Ready to install Insecure ADB On Boot",
            "@install",
            "I've got enough information, ready to apply Insecure ADB On Boot!" + 
              "\n\n\n" +
              "<b>User selections:</b>\n" + 
              "    <*> Root-mode ADBD = " + getvar("adb_rootmode_text") + "</*>" +
              "\n\n\n" + 
              getvar("adb_ready_footer_text")
        );
    endif;
    
    #########
    ## Remove
    #########
    if prop("choice_adb.prop","root")=="restore" then
        #########
        ## Confirm
        #########
        ini_set("text_next", "Restore  ");
        ini_set("icon_next", "@undo");
        textbox(
            "Restore",
            "Ready to restore ADB functionality",
            "@restore",
            "I've got enough information, ready to restore secure and non-boot ADB functionality!"
        );
    endif
endif;

#########
## Integrate ART Cache
#########
if prop("choice_main.prop","selected")=="3" then
    ini_set("text_next", "Integrate  ");
    ini_set("icon_next", "@chip");
    textbox(
        "Integrate ART Cache",
        "Move system OAT files from /data to /system",
        "@chip",
        "This process will move the ART cache (from /data/dalvik-cache folder) for system apps back to /system, freeing-up space on /data." + 
          "\n\n\n" +
          "<b>Useful when:</b>\n" + 
          "    <*> Installing a 'deodexed' ROM (e.g. Xiaomi.eu - be sure to boot the ROM first before running this tool so the cache can actually generate!)</*>" +
          "    <*> After you have installed Xposed (causing a rebuild of ART cache - again, make sure you boot the ROM first)</*>" +
          "\n\n\n" + 
          "Typically this can free up half a gigabyte on /data, re-utilizing the wasted space on system. System will be verified for enough free space."
    );
endif;

#########
## Icon Modder
#########
#if prop("choice_main.prop","selected")=="4" then
#    # NB ~~~ eval(read("/tmp/other_aroma_script.edify"));
#    ini_set("text_next", "Return  ");
#    ini_set("icon_next", "@home");
#    textbox(
#        "Icon Modder",
#        "All your icon modding needs!",
#        "@brush",
#        "Coming next version, sorry ;) I am tired of icon packs having missing icons, and having to mod/repack the icon packs with my own changes every time they're updated... so I'm going to make my own tool to make it easier!" + 
#          "\n\n\n" +
#          "<b>Features will include:</b>\n" + 
#          "    <*> Browse for a downloaded MTZ file and install it's icons to the system (no need for Designer account)</*>" +
#          "    <*> Copy any detected 'unthemed' icons to storage, allowing you to replace them with your own additions which will then be injected into the system - acts as an overlay to the MTZ icon pack</*>" +
#          "    <*> Generate icon pack APK from MTZ/override icons for use in Nova/ADW/Go/etc.</*>" +
#          "    <*> Remove icon mask (the "squircle" frame placed behind app icons)</*>" +
#          "\n\n\n" + 
#          "That might sound a bit confusing at first, but don't worry - it will make more sense once it's actually implemented."
#    );
#    goto("start");
#endif;

#########
## Changelog
#########
if prop("choice_main.prop","selected")=="4" then
    ini_set("text_next", "Return  ");
    ini_set("icon_next", "@home");
    textbox(
        "Changelog",
        "Changelog up to current version (" + ini_get("rom_version") + ")",
        "@changelog",
        read("/tmp/aroma/changelog.txt")
    );
    goto("start");
endif;

#########
## Exit
#########
if prop("choice_main.prop","selected")=="5" then
    exit("");
endif;

ini_set("text_next", "Return  ");
ini_set("icon_next", "@home");
setvar("retstatus",
    install(
        "Installing",
        "<b>"+ini_get("rom_name")+"</b> is performing the requested task(s).\n\n"+
        "This may take a minute.",
        "@install",
        "Done!\nBe sure to select 'Save Logs' in case you need to report a bug (this will overwrite any previous log made by this update ZIP)."
    )
);
goto("start");
